
// FiveInRow.cpp : Define class behavior of the application
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "FiveInRow.h"
#include "MainFrm.h"


#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CFiveInRowApp

BEGIN_MESSAGE_MAP(CFiveInRowApp, CWinApp)
	ON_COMMAND(ID_APP_ABOUT, &CFiveInRowApp::OnAppAbout)
END_MESSAGE_MAP()


// CFiveInRowApp constructor

CFiveInRowApp::CFiveInRowApp()
{
	// Support restart manager
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;
#ifdef _MANAGED

	// If the application is constructed by common language runtime :
	//     1) "Restart manager" will work normally only if the
	//        additional settings is added
	//     2) You must add reference to System.Windows.Forms in
	//        generated order in your project
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: replace the ID string of the application with the unique
	// ID string; suggested string format
	// For CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID("Five-in-a-Row.AppID.NoVersion");

	// TODO: Add here construction code,
	// Put all important initializtion code in InitInstance
}

// The only one CFiveInRowApp object

CFiveInRowApp theApp;


// CFiveInRowApp initializtion

BOOL CFiveInRowApp::InitInstance()
{
	// InitCommonControlsEx() is needed, if a application list is
	// assigned to use ComCtl32.dll v6 or higher verion to start
	// visualization, or the window wll not be create
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// Set it to include all common control class used in the
	// application.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	// OLE library initializtion
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction(FALSE);

	// Need AfxInitRichEdit2() to use RichEdit
	// AfxInitRichEdit2();

	// Standard initializtion
	// Not required specific initialization routine below for changing
	// registry key used to set storage should be removed for
	// minimizing the executable file size, if they are unused
	// TODO: this string should be revised, for instance, company name
	// or organization name.
	SetRegistryKey("Native application generated by application wizard");



	// If you want to create a main window, please create a new window
	// frame object, and then set it to the main window object of the
	// application
	CMainFrame* pFrame = new CMainFrame;
	if (!pFrame)
		return FALSE;
	m_pMainWnd = pFrame;
	// Create and load frame as well as resoure
	pFrame->LoadFrame(IDR_MAINFRAME,
		WS_OVERLAPPEDWINDOW | FWS_ADDTOTITLE, NULL,
		NULL);






	// The unique window is initialized, so show and update it
	pFrame->ShowWindow(SW_SHOW);
	pFrame->UpdateWindow();
	// Call DragAcceptFiles only when it has a suffix
	// It should happen after ProcessShellCommand in SDI application
	return TRUE;
}

int CFiveInRowApp::ExitInstance()
{
	//TODO: process additional resource that may be added
	AfxOleTerm(FALSE);

	return CWinApp::ExitInstance();
}

// CFiveInRowApp message process program


// CAboutDlg dialog used for "About" menu of the application

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// Dialog data
	enum { IDD = IDD_ABOUTBOX };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support

// Implement
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// Application command used for runing dialog
void CFiveInRowApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

// CFiveInRowApp message process program



